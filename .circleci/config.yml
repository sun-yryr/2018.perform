# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/2018.perform/
    docker:
      - image: circleci/node:7.10
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
              - "1a:a6:fc:8f:09:ba:34:32:a0:ca:d8:97:de:ea:b0:35"
      - run: 
          name: ssh setup 
          command: |
              sudo apt-get update -y && sudo apt-get install -y --fix-missing ssh rsync
              ssh-keyscan ${AZURE_DEVELOP} >> ~/.ssh/known_hosts
              ssh-keyscan ${AZURE_PRODUCT} >> ~/.ssh/known_hosts
      - deploy:
          name: deploy develop branch
          command: |
              echo ${CIRCLE_BRANCH},${USER_NAME},${PRODUCTION_SERVER},${DEVELOPMENT_SERVER}
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                export SERVER=kfes@${AZURE_PRODUCT}
                rsync -av --delete ./scripts/setup.product.sh ${SERVER}:/home/kfes/setup.sh 2>&1 >/dev/null
                rsync -av --delete ./static ${SERVER}:/home/kfes/dep 2>&1 >/dev/null
                rsync -av --delete ./bot ${SERVER}:/home/kfes/dep 2>&1 >/dev/null
                rsync -av --delete ./api-server ${SERVER}:/home/kfes/dep 2>&1 >/dev/null
                ssh ${SERVER} 'bash /home/kfes/setup.sh'
              else
                export SERVER=kfes@${AZURE_DEVELOP}
                rsync -av --delete ./scripts/setup.develop.sh ${SERVER}:/home/kfes/setup.sh 2>&1 >/dev/null
                rsync -av --delete ./static ${SERVER}:/home/kfes/dep 2>&1 >/dev/null
                ssh ${SERVER} 'bash /home/kfes/setup.sh $CIRCLECI_DEPLOY_NUM'
              fi

  test:
    working_directory: ~/2018.perform/
        #    working_directory: ~/api-server
    docker:
      - image: circleci/node:7.10
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "api-server/package.json" }}
          - v1-dependencies-
      - run: 
          name: test express server
          working_directory: ~/2018.perform/api-server
          command: yarn test

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
